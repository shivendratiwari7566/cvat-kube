apiVersion: v1
kind: ConfigMap
metadata:
  name: confnginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
      access_log  /var/log/nginx/access.log  main;
      sendfile        on;
      keepalive_timeout  65;
      server {
        listen 80;

        server_name _;
        #server_name ~^(?<subdomain>.*?)\.;
        # resolver  8.8.8.8;
        #        resolver kube-dns.kube-system.svc.cluster.local valid=5s;

        #        location /healthz {
        #          return 200;
        #        }

        location / {
                #          proxy_set_header Upgrade $http_upgrade;
                #      proxy_set_header Connection "Upgrade";
          proxy_pass http://10.102.107.74:80;
          #proxy_pass http://10.111.163.213:80;
          # proxy_set_header Host $host;
          proxy_http_version 1.1;
        }


        #        location /api/ {
                # proxy_set_header Upgrade $http_upgrade;
                #   proxy_set_header Connection "Upgrade";
                #                proxy_pass http://cvat:8080;
                #          proxy_pass http://cvat:8080;
                #    proxy_pass http://10.111.92.113:8080;
          #          proxy_set_header Host $host;
          #         }


      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy-cvat
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
          - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: confnginx
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-proxy-cvat
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30800
    name: nginx
